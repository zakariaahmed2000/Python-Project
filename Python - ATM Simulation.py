# -*- coding: utf-8 -*-
"""Python ATM.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mWEyxcEHZ9hxTsSZ3buhKBecRN3u-nDh
"""

!pip install colabcode

#Python - ATM Simulation Project
balance=500

def cardinsert():
  print("-------------------------------------")
  print("\n\tInsert your card into the ATM ")
  print("\n1 Yes")
  print("2 No")
  print("\nNote to customers: no reciepts available at this ATM")

  while True:
    userinput=int(input("\nHave you inserted your card? "))
    if userinput<0 or userinput>2:
      print("\nInvalid option. Try again.")
    elif userinput==1:
      pin()
      break
    else:
      print("\nPlease insert your card")

def pin():
  print("-------------------------------------")
  for _ in range(3):
      pin = int(input("\nEnter your 4-digit PIN: "))
      while len(str(pin)) != 4:
        pin = int(input('\nThat was not a 4-digit number. Please enter your 4-digit number: '))

      if pin == 1234:
        mainmenu()
      else:
        print("\nIncorrect PIN. Please try again.")
  else:
    print("\nSorry, your account has been locked due to 3 incorrect PIN inputs. Please contact your local Anfield Bank branch to unlock your account.")
    returncard()

#main menu
def mainmenu():
  print("-------------------------------------")
  print("\n\tWelcome to My Bank.")
  print("\n Main Menu")
  print("\n1 Display balance")
  print("\n2 Withdraw funds")
  print("\n3 Deposit funds")
  print("\n4 Exit")

  menuselect=int(input("\nEnter the number you would like to select: "))
  while menuselect<1 or menuselect>4:
    print("Invalid request. try again.")
    menuselect=int(input("Enter the number you would like to select: "))

  if menuselect==1:
    displaybalance()
  elif menuselect==2:
    withdrawfunds()
  elif menuselect==3:
    depositfunds()
  else:
    returncard()

#display balance
def displaybalance():
  print("-------------------------------------")
  currentbalance=print("\n\t Your balance is: £", balance)
  print("\n")
  goback_balance()

#Withdraw funds
def withdrawfunds():
  print("-------------------------------------")
  print("\n\tHow much would you like to withdraw?")
  print("\n1 £10")
  print("\n2 £20")
  print("\n3 £40")
  print("\n4 £60")
  print("\n5 £80")
  print("\n6 £100")
  print("\n7 Other amount")
  print("\n8 Main Menu")
  print("\n9 Exit")

  menuselect=int(input("\nEnter the number you would like to select: "))
  global balance
  while menuselect<1 or menuselect>9:
    print("\n Invalid request. Try again.")
    menuselect=int(input("\nEnter the number you would like to select: "))
  if menuselect==1:
    if 10 <= balance:
      balance -= 10
      print("\nTransaction Successful")
    else:
        print("\nInsufficient Balance")
    goback_withdraw()
  elif menuselect==2:
    if 20 <= balance:
      balance -= 20
      print("\nTransaction Successful")
    else:
        print("\nInsufficient Balance")
    goback_withdraw()
  elif menuselect==3:
    if 40 <= balance:
      balance -= 40
      print("\nTransaction Successful")
    else:
        print("\nInsufficient Balance")
    goback_withdraw()
  elif menuselect==4:
    if 60 <= balance:
      balance -= 60
      print("\nTransaction Successful")
    else:
        print("\nInsufficient Balance")
    goback_withdraw()
  elif menuselect==5:
    if 80 <= balance:
      balance -= 80
      print("\nTransaction Successful")
    else:
        print("\nInsufficient Balance")
    goback_withdraw()
  elif menuselect==6:
    if 100 <= balance:
      balance -= 100
      print("\nTransaction Successful")
    else:
        print("\nInsufficient Balance")
    goback_withdraw()
  elif menuselect==7:
    otheramount()
  elif menuselect==8:
    mainmenu()
  else:
    returncard()

#goback withdrawal
def goback_withdraw():
  print("-------------------------------------")
  print("\n\t Select an option: ")
  print("\n1 Go Back")
  print("\n2 Main Menu")
  print("\n3 Exit")
  menuselect=int(input("\nEnter the number you would like to select: "))
  while menuselect<1 or menuselect>3:
    print("\n Invalid request. Try again.")
    menuselect=int(input("\nEnter the number you would like to select: "))
  if menuselect==1:
    withdrawfunds()
  elif menuselect==2:
    mainmenu()
  else:
    returncard()

#goback balance
def goback_balance():
  print("-------------------------------------")
  print("\n\t Select an option: ")
  print("\n1 Back to main menu")
  print("\n2 Exit")
  menuselect=int(input("\nEnter the number you would like to select: "))
  while menuselect<1 or menuselect>2:
    print("\n Invalid request. Try again.")
    menuselect=int(input("\nEnter the number you would like to select: "))
  if menuselect==1:
    mainmenu()
  else:
    returncard()

#goback withdrawal
def goback_deposit():
  print("-------------------------------------")
  print("\n\t Select an option: ")
  print("\n1 Back to deposit")
  print("\n2 Main Menu")
  print("\n3 Exit")
  menuselect=int(input("\nEnter the number you would like to select: "))
  while menuselect<1 or menuselect>3:
    print("\n Invalid request. Try again.")
    menuselect=int(input("\nEnter the number you would like to select: "))
  if menuselect==1:
    depositfunds()
  elif menuselect==2:
    mainmenu()
  else:
    returncard()

#deposit funds
def depositfunds():
  print("-------------------------------------")
  print("\n\tHow much would you like to deposit? ")
  global balance
  while True:
    deposit_input=int(input("\nEnter amount: "))
    if deposit_input<0:
      print("Invalid amount. Try again.")
    else:
      print("\n£{deposit_input} has been deposited". format(deposit_input=deposit_input))
      balance+=deposit_input
      goback_deposit()
      break

#other amount
def otheramount():
  print("-------------------------------------")
  global balance
  while True:
    withdraw_input=int(input("Enter the amount you would like to withdraw: "))
    if withdraw_input<0:
      print("Invalid amount. Try again.")
    elif withdraw_input <= balance:
      balance -= withdraw_input
      print("\nTransaction Successful")
      goback_withdraw()
    else:
      print("\nInsufficient Balance")
      goback_withdraw()

#returncard
def returncard():
  print("-------------------------------------")
  print("\n\t Card has been ejected.")
  cardinsert()


cardinsert()